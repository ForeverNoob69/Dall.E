import React, {useState,useEffect} from 'react'
import { Card,FormField } from '../componenet'
import { TailSpin } from  'react-loader-spinner'

const RenderCards = ({title,data})=>{
  if(data?.length>0){
    return(
      data.map((post)=>{
        return(
          <Card key={post.id} {...post}/>
          )
      })
    )
  }
  return (<h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>{title}</h2>)
}

function Home() {

  const [loading, setLoading] = useState(false)
  const [allPosts,setAllPosts] = useState(null)
  const [searchText,setSearchText] = useState('')
  const [searchResults,setSearchResults] = useState(null)
  const [searchTimeOut,setSearchTimeOut] = useState(null)

  const handleSearchChange = (e)=>{
    clearTimeout(searchTimeOut)
    setSearchText(e.target.value)

    
    setSearchTimeOut(
    setTimeout(()=>{
        const searchResults = allPosts.filter((item)=>item.name.toLowerCase().includes(searchText.toLowerCase()) ||
        item.prompt?.toLowerCase().includes(searchText.toLowerCase()))
        setSearchResults(searchResults)
      },500)
      )
  }

  useEffect(()=>{
    setLoading(true)
    const fetchPost = async ()=>{
      try{

        const response = await fetch("http://127.0.0.1:8000/api/post_image/",{
          method:'GET',
          headers:{
            "Content-Type":"application/json",
          },
      })
      if(response.ok){
        const result = await response.json()
        setAllPosts(await result.reverse())
      }
    }catch(error){
      alert(error)
    }finally{
      setLoading(false)
    }
    }
    fetchPost()
  },[])

  return (
    <section className='max-w-7xl mx-auto'>
      <div >
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Show case <span className='text-sm text-[gray] italic font-inter'>Developed by Naimur Sharon</span></h1>
        <p className='mt-2 text-[#666e75] text-[14px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning image generated by me
        </p>
      </div>

      <div className='mt-16'>
        <FormField
        labelName={"Search Images"}
        type={'text'}
        name={'text'}
        placeholder={'Search Posts'}
        value={searchText}
        handleChange={handleSearchChange}
        />
      </div>

      <div>
        {loading ? <TailSpin
            height="80"
            width="80"
            color="gray"
            ariaLabel="tail-spin-loading"
            radius="1"
            visible={true}
/> : <>{
searchText && (
  <h2 className='font-medium text-[#666e75] text-xl mb-3'>
    Showing results for <span className='text-[#222328]'>{searchText}</span>
  </h2>
)}
<div className='grid lg:grid-cols-4 sm:grid-cols-3 xsm: grid-cols-2 grid-cols-1 gap-3'>
  {searchText ? 
  <RenderCards data={searchResults} title='no search result found'/> : 
  <RenderCards data={allPosts} title='No POsts'/>
}
</div>
</>}
      </div>
    </section>
  )
}

export default Home